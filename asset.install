<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */


function asset_install() {

  // Create image style
  asset_install_image_style();

  return array();
}


/**
 * Implements hook_schema().
 */
function asset_schema() {
  $schema = array();

  $schema['asset'] = array(
    'description' => 'The base table for asset entities.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Identifier for a asset.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {asset_type}.type of this asset.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the asset.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the asset - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the asset was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the asset was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['asset_type'] = array(
    'description' => 'Stores information about defined asset types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique asset type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this asset type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this asset type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this asset type in relation to others.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this asset type.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Create image style
 */
function asset_install_image_style(){
  if(!image_style_load('asset-thumb')){
    $style = image_style_save(array('name' => 'asset-thumb'));
    $effect = array(
      'name' => 'image_scale_and_crop',
      'data' => array(
        'width' => 170,
        'height' => 100,
      ),
      'isid' => $style['isid'],
    );
    image_effect_save($effect);
  }
  if(!image_style_load('asset-full')){
    $style = image_style_save(array('name' => 'asset-full'));
    $effect = array(
      'name' => 'image_scale',
      'data' => array(
        'width' => 770,
        'height' => '',
        'upscale' => TRUE,
      ),
      'isid' => $style['isid'],
    );
    image_effect_save($effect);
  }
}
