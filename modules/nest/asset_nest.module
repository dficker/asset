<?php

require_once dirname(__FILE__) . '/includes/asset_nest.form.inc';

/**
 * Implements hook_field_widget_info().
 */
function asset_nest_field_widget_info() {
  $widgets = array();
  $widgets['asset_nest'] = array(
    'label' => t('Asset Nest'),
    'field types' => array('entityreference'),
    'settings' => array(
      'override_labels' => FALSE,
      'label_singular' => 'asset',
      'label_plural' => 'assets',
    ),
    'behaviors' => array(
      'multiple values' => FIELD_BEHAVIOR_CUSTOM,
      'default value' => FIELD_BEHAVIOR_NONE,
    ),
  );
  return $widgets;
}

/**
 * Implements hook_field_widget_settings_form().
 */
function asset_nest_field_widget_settings_form($field, $instance) {
  $widget = $instance['widget'];
  $settings = $widget['settings'] + field_info_widget_settings($widget['type']);
  $states_prefix = 'instance[widget][settings]';

  $form = array();

  $form['override_labels'] = array(
    '#type' => 'checkbox',
    '#title' => t('Override labels'),
    '#default_value' => $settings['override_labels'],
  );
  $form['label_singular'] = array(
    '#type' => 'textfield',
    '#title' => t('Singular label'),
    '#default_value' => $settings['label_singular'],
    '#states' => array(
      'visible' => array(
        ':input[name="' . $states_prefix . '[override_labels]"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['label_plural'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural label'),
    '#default_value' => $settings['label_plural'],
    '#states' => array(
      'visible' => array(
        ':input[name="' . $states_prefix . '[override_labels]"]' => array('checked' => TRUE),
      ),
    ),
  );
  return $form;
}

/**
 * Implements hook_field_widget_form()
 */
function asset_nest_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  // Ensure that the entity target type exists before displaying the widget.
  $entity_info = entity_get_info($field['settings']['target_type']);
  if (empty($entity_info)){
    return;
  }
  $settings = $instance['widget']['settings'];
  // $entity = isset($element['#entity']) ? $element['#entity'] : NULL;
  $parent_entity_type = $form_state['asset_nest']['parent_entity_type'] = $instance['entity_type'];
  $child_entity_type = $form_state['asset_nest']['child_entity_type'] = asset_nest_get_entity_type($field);
  $child_entity_bundle = $form_state['asset_nest']['child_entity_bundle'] = asset_nest_get_entity_bundle($field);
  $parent_field_name = $form_state['asset_nest']['parent_field_name'] = $field['field_name'];

  $wrapper = $form_state['asset_nest']['wrapper'] = 'asset-nest-form';
  $form['#id'] = $wrapper;

  // Build a parents array for this element's values in the form.
  $parents = array_merge($element['#field_parents'], array($element['#field_name'], $element['#language']));
  $key = sha1(implode('-', $parents));

  foreach($items as $cardinality => $item){
    // $element[$cardinality]['target_id'] = array(
    //   '#type' => 'value',
    //   '#value' => $item['target_id'],
    // );
    $element[$cardinality]['target_id'] = array(
      '#type' => 'textfield',
      '#default_value' => $item['target_id'],
    );
    $element[$cardinality]['edit'] = array(
      '#type' => 'submit',
      '#name' => $key.$cardinality.'_edit',
      '#value' => t('Edit @type_singular', array('@type_singular' => $settings['label_singular'])),
      '#ajax' => array(
        'callback' => 'asset_nest_get_entity_form',
        'wrapper' => $wrapper,
      ),
      '#entity_id' => $item['target_id'],
      '#submit' => array('asset_nest_open_entity_form'),
    );
  }
  // if(empty($items)){
  //   $element[$delta]['target_id'] = array(
  //     '#type' => 'textfield',
  //     '#default_value' => '',
  //   );
  // }

  // $element['actions'] = array('#type' => 'actions');
  $element['add_more'] = array(
    '#type' => 'submit',
    '#name' => 'add_more',
    '#value' => t('Add new @type_singular', array('@type_singular' => $settings['label_singular'])),
    // '#limit_validation_errors' => array(),
    '#ajax' => array(
      'callback' => 'asset_nest_get_entity_form',
      'wrapper' => $wrapper,
    ),
    '#submit' => array('asset_nest_open_entity_form'),
  );
  // $form['#after_build'][] = 'asset_nest_after_build';
  return $element;

  $element += array(
    '#type' => 'textfield',
    '#default_value' => '74',
    // '#maxlength' => 1024,
  );
  return array($delta => array('target_id' => $element));

  // We let the Field API handles multiple values for us, only take
  // care of the one matching our delta.
  $items = array();
  if (isset($items[$delta])) {
    $items = array($items[$delta]);
  }

  // get field_state
  $parents = $form['#parents'];
  $field_name= $field['field_name'];
  // use field_form_get_state to get current field state
  $field_state = field_form_get_state($parents, $field_name, $langcode, $form_state);


  $entity_ids = array();
  $entity_labels = array();

  $element += array(
    '#type' => 'textfield',
    '#default_value' => '74',
    // '#maxlength' => 1024,
  );

}

function asset_nest_form_alter(&$form, &$form_state, $form_id){
  if(!empty($form_state['asset_nest_op'])){
    $old_form = $form;
    $old_form_state = $form_state;
    $new_form_state = array(
      'asset_nest' => $old_form_state['asset_nest'],
    );
    if($old_form_state['asset_nest_op'] == 'child'){
      $trigger = $old_form_state['triggering_element'];
      $child_entity_id = !empty($trigger['#entity_id']) ? $trigger['#entity_id'] : NULL;
      extract($new_form_state['asset_nest']);
      if($child_entity_id){
        $child_entity = entity_load_single($child_entity_type, $child_entity_id);
      }
      else{
        $child_entity = entity_create($child_entity_type, array('type' => $child_entity_bundle));
      }
      $form_id = 'asset_nest_entity_form';
      $args = array(
        $child_entity,
        $new_form_state['asset_nest']
      );

      dsm($args);
    }
    $new_form_state['build_info']['args'] = $args;
    $form = drupal_build_form($form_id, $new_form_state);
    $form_state = $new_form_state;

    dsm($form);
    dsm($form_state);
    // $args = array();
    // $new_form_state = array();
    // if($old_form_state['asset_nest_op'] == 'child'){
    //   $trigger = $old_form_state['triggering_element'];
    //   $child_entity_id = !empty($trigger['#entity_id']) ? $trigger['#entity_id'] : NULL;
    //   extract($old_form_state['asset_nest']);
    //   if($child_entity_id){
    //     $child_entity = entity_load_single($child_entity_type, $child_entity_id);
    //   }
    //   else{
    //     $child_entity = entity_create($child_entity_type, array('type' => $child_entity_bundle));
    //   }
    //   $new_form_state['asset_nest'] += array(
    //     'parent_entity' => $old_form_state[$old_form_state['asset_nest']['parent_entity_type']],
    //     'parent_form_id' => $old_form_state['values']['form_id'],
    //     'parent_form_token' => $old_form_state['values']['form_token'],
    //     'parent_build_id' => $form_build_id,
    //   );
    //   $form_id = 'asset_nest_entity_form';
    //   $args = array(
    //     $child_entity,
    //     $old_form_state['asset_nest']
    //   );
    // }
    // dsm($args);

    // $form_state['build_info']['args'] = $args;
    // $form = drupal_build_form($form_id, $form_state);
  }
  // // dsm('Original' . $form['#build_id']);
  // if(!empty($form_state['asset_nest_op'])){
  //   $form_build_id = !empty($form_state['asset_nest']['parent_build_id']) ? $form_state['asset_nest']['parent_build_id'] : $form_state['values']['form_build_id'];
  //   $form_id = !empty($form_state['asset_nest']['parent_form_id']) ? $form_state['asset_nest']['parent_form_id'] : $form_state['values']['form_id'];
  //   $form_token = !empty($form_state['asset_nest']['parent_form_token']) ? $form_state['asset_nest']['parent_form_token'] : $form_state['values']['form_token'];
  //   if($form_state['asset_nest_op'] == 'child'){
  //     // dsm($form_state['asset_nest']);
  //     $trigger = $form_state['triggering_element'];
  //     $child_entity_id = !empty($trigger['#entity_id']) ? $trigger['#entity_id'] : NULL;
  //     extract($form_state['asset_nest']);
  //     if($child_entity_id){
  //       $child_entity = entity_load_single($child_entity_type, $child_entity_id);
  //     }
  //     else{
  //       $child_entity = entity_create($child_entity_type, array('type' => $child_entity_bundle));
  //     }
  //     $form_state['asset_nest'] += array(
  //       'parent_entity' => $form_state[$form_state['asset_nest']['parent_entity_type']],
  //       'parent_form_id' => $form_state['values']['form_id'],
  //       'parent_form_token' => $form_state['values']['form_token'],
  //       'parent_build_id' => $form_build_id,
  //     );
  //     $form = drupal_get_form('asset_nest_entity_form', $child_entity, $form_state['asset_nest']);
  //   }
  //   elseif($form_state['asset_nest_op'] == 'parent'){
  //     extract($form_state['asset_nest']);
  //     $form = drupal_get_form($parent_form_id, $parent_entity);
  //   }
  //   $temp_form_state = array('values'=>array());
  //   $cache = form_get_cache($form['#build_id'], $temp_form_state);
  //   $temp_form_state['triggering_element'] = $form_state['triggering_element'];
  //   $temp_form_state['submit_handlers'] = $form_state['submit_handlers'];
  //   $form_state = $temp_form_state;
  //   $form_state['rebuild'] = TRUE;
  //   // $form_state['asset_nest_op'] = NULL;
  //   $form['form_build_id']['#value'] = $form_build_id;
  //   $form['form_id']['#value'] = $form_id;
  //   // $form['form_token']['#value'] = $form_token;
  //   $form['#build_id'] = $form_build_id;
  //   $form['#form_id'] = $form_id;
  //   // $form['#token'] = $form_token;
  //   // form_set_cache($form_build_id, $form, $form_state);
  //   // $form['form_build_id']['#value'] = $form_state['asset_nest']['parent_build_id'];

  //   // If the original form is contained in include files, load the files.
  //   // @see form_load_include()
  //   // $form_state['build_info'] += array('files' => array());
  //   // foreach ($form_state['build_info']['files'] as $file) {
  //   //   if (is_array($file)) {
  //   //     $file += array(
  //   //       'type' => 'inc',
  //   //       'name' => $file['module'],
  //   //     );
  //   //     module_load_include($file['type'], $file['module'], $file['name']);
  //   //   }
  //   //   elseif (file_exists($file)) {
  //   //     require_once DRUPAL_ROOT . '/' . $file;
  //   //   }
  //   // }
  //   dsm($form);
  //   dsm($form_state);
  // // dsm($form['#build_id']);
  // }

}

/**
 * Open entity form.
 */
function asset_nest_open_entity_form($form, &$form_state){
  extract($form_state['asset_nest']);
  $entity = entity_ui_controller($parent_entity_type)->entityFormSubmitBuildEntity($form, $form_state);
  $entity->save();

  $form_state['rebuild'] = TRUE;
  $form_state['asset_nest_op'] = 'child';
}

/**
 * Get referenced entity type
 */
function asset_nest_get_entity_type($field){
  return $field['settings']['target_type'];
}

/**
 * Get referenced entity bundle
 */
function asset_nest_get_entity_bundle($field){
  return key($field['settings']['handler_settings']['target_bundles']);
}

/**
 * Returns a nest widget nearest to the triggering element.
 */
function asset_nest_get_entity_form($form, $form_state) {
  // dsm('die');
  // dsm($form);
  // dsm($form_state);
  return $form;

  // $trigger = $form_state['triggering_element'];
  // $child_entity_id = !empty($trigger['#entity_id']) ? $trigger['#entity_id'] : NULL;
  // $entity_type = $form_state['asset_nest']['entity_type'];
  // $entity = $form_state[$entity_type];
  // $field_name = $form_state['asset_nest']['field_name'];
  // $child_entity_type = $form_state['asset_nest']['child_entity_type'];
  // $child_entity_bundle = $form_state['asset_nest']['child_entity_bundle'];

  // if($child_entity_id){
  //   $child_entity = entity_load_single($child_entity_type, $child_entity_id);
  // }
  // else{
  //   $child_entity = entity_create($child_entity_type, array('type' => $child_entity_bundle));
  // }

  // $entity_form = drupal_get_form('asset_nest_entity_form', $child_entity, $child_entity_type, $entity, $entity_type, $field_name, $form_state['values']['form_id']);
  // return $entity_form;
  // $rendered_form = theme('status_messages') . render($entity_form);

  // $commands = array();
  // $commands[] = ajax_command_replace('#' . $form_state['asset_nest']['wrapper'], $rendered_form);
  // return array('#type' => 'ajax', '#commands' => $commands);
}
