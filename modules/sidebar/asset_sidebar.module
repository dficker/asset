<?php

/**
 * Implements hook_menu
 *
 * @author JaceRider
 */
function asset_sidebar_menu(){
  $items['admin/config/content/asset/convert'] = array(
    'title' => 'Sidebar',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('asset_sidebar_settings'),
    'access arguments' => array('administer asset sidebar'),
    'file' => 'asset_sidebar.admin.inc',
    'description' => t('Configure the assets sidebar.'),
    'type' => MENU_LOCAL_TASK,
  );

  $type = asset_type_load('sidebar');
  $asset = asset_create(array('type' => $type->type));
  $items['asset/sidebar/add/%/%'] = array(
    'title' => 'Add ' . $type->label,
    'page callback' => 'asset_sidebar_form_wrapper',
    'page arguments' => array($asset,3,4),
    'theme callback' => 'ajax_base_page_theme',
    'access callback' => 'asset_access',
    'access arguments' => array('edit', $asset),
    'file' => 'asset_sidebar.page.inc',
    'file path' => drupal_get_path('module', 'asset_sidebar'),
    'type' => MENU_CALLBACK
  );
  $items['asset/sidebar/edit/%asset'] = array(
    'title' => 'Edit ' . $type->label,
    'page callback' => 'asset_sidebar_form_wrapper',
    'page arguments' => array(3),
    'theme callback' => 'ajax_base_page_theme',
    'access callback' => 'asset_access',
    'access arguments' => array('edit', $asset),
    'file' => 'asset_sidebar.page.inc',
    'file path' => drupal_get_path('module', 'asset_sidebar'),
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function asset_sidebar_admin_paths() {
  $paths = array(
    'asset/sidebar/*' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_permission().
 */
function asset_sidebar_permission() {
  return array(
    'administer asset sidebar' => array(
      'title' => t('Administer Assets Sidebar'),
      'description' => t('Perform administration tasks for sidebar assets.'),
    ),
  );
}



/**
 * Implements hook_page_alter().
 */
function asset_sidebar_page_alter(&$page){
  $current_path = current_path();
  if(!path_is_admin($current_path)){

    if($object = asset_sidebar_page_object()){
      $url = 'asset/sidebar/add/' . $object['type'] . '/' . $object['id'];
      $region = variable_get('asset_sidebar_region');
      $page[$region] = empty($page[$region]) ? array() : $page[$region];
      $region = &$page[$region];

      if($sidebar = asset_sidebar_block($object)){

        $url = 'asset/sidebar/edit/' . $sidebar->id;

        $wrapper = entity_metadata_wrapper('asset', $sidebar);
        foreach ($wrapper->field_asset_sidebar_blocks->getIterator() as $delta => $block_wrapper) {
          $title = $block_wrapper->field_asset_sidebar_title->value();
          $render = $block_wrapper->view();
          $content = drupal_render($render);
          asset_sidebar_block_create($region, $title, $content);
        }

        // $title = $sidebar->name;
        // $render = asset_render($sidebar);
        // $content = drupal_render($render);
        // asset_sidebar_block_create($region, $title, $content);
      }

      $title = '';
      $content = l('<i class="fa fa-edit"></i> Manage Sidebar', $url, array('html'=>TRUE, 'query' => drupal_get_destination(), 'attributes'=>array('class'=>array('btn','btn-primary', 'btn-block'))));
      asset_sidebar_block_create($region, $title, $content);
    }
  }
}

/**
 * Get sidebar for given page
 */
function asset_sidebar_block($object){
  $asset = NULL;
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'asset')
    ->entityCondition('bundle', 'sidebar')
    ->fieldCondition('field_asset_sidebar_id', 'value', $object['id'], '=')
    ->fieldCondition('field_asset_sidebar_type', 'value', $object['type'], '=')
    ->range(0, 1);; // Run the query as user 1.
  $result = $query->execute();
  if (isset($result['asset'])) {
    $keys = array_keys($result['asset']);
    $asset_id = array_pop($keys);
    $asset = asset_load($asset_id);
  }
  return $asset;
}

/**
 * Get page object
 */
function asset_sidebar_page_object(){
  $return = array();
  if($return['object'] = menu_get_object()){
    $return['id'] = $return['object']->nid;
    $return['type'] = 'node';
  }
  elseif($return['object']  = views_get_page_view()){
    $return['id'] = $return['object']->name . '__' . $return['object']->current_display;
    $return['type'] = 'view';
  }
  return empty($return['object']) ? FALSE : $return;
}

/**
 * Create a block for display.
 */
function asset_sidebar_block_create(&$region, $title, $content){
  $delta = count($region);
  $key = 'sidebar_elements-' . $delta;
  $region[$key]['#markup'] = $content;
  $region[$key]['#theme_wrappers'][] = 'block';
  $region[$key]['#block'] = (object) array();
  $region[$key]['#block']->bid = 'field_sidebar_elements';
  $region[$key]['#block']->region = 'sidebar_second';
  $region[$key]['#block']->subject = $title;
  // $region[$key]['#block']->content[] = $content;
  $region[$key]['#block']->module = 'asset_sidebar';
  $region[$key]['#block']->delta = $delta;
  $region[$key]['#block']->subject_array['#markup'] = $title;
  $region[$key]['#children'] = array();
}

/**
 * Implements hook_form_alter().
 */
function asset_sidebar_form_asset_sidebar_edit_form_alter(&$form, &$form_state){
  $asset_type = asset_type_load($form_state['asset']->type);

  $widget = &$form['field_asset_sidebar_blocks'][$form['field_asset_sidebar_blocks']['#language']];

  $widget['actions']['ief_add']['#value'] = 'Add New';
  if(!user_access('administer asset sidebar')){
    $widget['actions']['ief_add']['#states'] = array(
      'visible' => array(
        ':input[name="field_asset_sidebar_blocks[und][actions][bundle]"]' => array('value' => 'sidebar_custom'),
      ),
    );
  }
  else{
    $widget['message'] = array(
      '#markup' => '<div class="messages status">'.t('Only users with the "administer asset sidebar" permission can create assets other than "custom".').'</div>'
    );
  }
  if(isset($widget['actions']['ief_add_existing'])) $widget['actions']['ief_add_existing']['#value'] = 'Add Existing';

  if(isset($widget['actions']['bundle'])){
    $widget['actions']['bundle']['#title'] = '<i class="fa fa-'.$asset_type->data['icon'].'"></i> ' . t('ADD BLOCK:');
    $widget['actions']['bundle']['#field_prefix'] = '<div class="description"><span class="fa-stack fa-1x"><i class="fa fa-square fa-stack-2x"></i><i class="fa fa-stack-1x fa-inverse">1</i></span> ' . t('Choose block type') . ':</div>';
    $widget['actions']['bundle']['#description'] = '&nbsp;&nbsp;<span class="fa-stack fa-1x"><i class="fa fa-square fa-stack-2x"></i><i class="fa fa-stack-1x fa-inverse">2</i></span> ' . t('Choose an action:');
    foreach($widget['actions']['bundle']['#options'] as $bundle => &$name){
      $name = str_replace('Sidebar Block | ', '', $name);
    }
  }

  if(isset($widget['form']['name'])){
    $widget['form']['name']['#title'] = t('Administrative Title');
    $widget['form']['name']['#description'] = t('Use this title to describe your block. It is used in the backend admin to help you find and reuse it.');
    // $widget['form']['name']['#description'] = t('The title will be displayed above your block in the sidebar.');
  }

  if(isset($widget['entities'])){
    foreach (element_children($widget['entities']) as $key) {
      if(isset($widget['entities'][$key]['form'])) $widget['actions']['#access'] = FALSE;
    }
  }

  if(isset($widget['form'])){
    $widget['actions']['#access'] = FALSE;
  }

  if(isset($form['actions']['submit'])){
    if(empty($form_state['asset']->id)){
      $form['actions']['submit']['#value'] = 'Create Sidebar';
    }else{
      $form['actions']['submit']['#value'] = 'Update Sidebar';
    }
  }

  if(isset($form['actions']['delete'])){
    $form['actions']['delete']['#value'] = 'Delete Sidebar';
    $form['actions']['delete']['#suffix'] = '';
  }

}
